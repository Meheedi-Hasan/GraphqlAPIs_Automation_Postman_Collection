{
	"info": {
		"_postman_id": "e54456eb-3d49-464b-a303-4965bbb7902b",
		"name": "connect_console",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21203524"
	},
	"item": [
		{
			"name": "connect_console_financial_service",
			"item": [
				{
					"name": "connect_console_kyc_request_information",
					"item": [
						{
							"name": "queries",
							"item": [
								{
									"name": "KycRequestInformationFindAll",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Array is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceKycRequestInformationFindAll !=null).equals(true);\r",
													"});\r",
													"pm.test(\"app is an object\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(typeof jsonData.data.connectConsoleFinancialServiceKycRequestInformationFindAll[0].app).to.equal(\"object\");\r",
													"}); \r",
													"pm.test(\"app_role_type_id is null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceKycRequestInformationFindAll[0].app_role_type_id ==null).equals(true);\r",
													"});\r",
													"pm.test(\"app_user_role_type_id is null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceKycRequestInformationFindAll[0].app_user_role_type_id ==null).equals(true);\r",
													"});\r",
													"pm.test(\"authorized_at is null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceKycRequestInformationFindAll[0].authorized_at ==null).equals(true);\r",
													"});\r",
													"pm.test(\"client_app is an object\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(typeof jsonData.data.connectConsoleFinancialServiceKycRequestInformationFindAll[0].client_app).to.equal(\"object\");\r",
													"});\r",
													"pm.test(\"client_app_id is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceKycRequestInformationFindAll[0].client_app_id !=null).equals(true);\r",
													"});\r",
													"pm.test(\"created_at is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceKycRequestInformationFindAll[0].created_at !=null).equals(true);\r",
													"});\r",
													"pm.test(\"created_by is null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceKycRequestInformationFindAll[0].created_by == null).equals(true);\r",
													"});\r",
													"pm.test(\"created_ip is null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceKycRequestInformationFindAll[0].created_ip == null).equals(true);\r",
													"});\r",
													"pm.test(\"deleted_at is null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceKycRequestInformationFindAll[0].deleted_at == null).equals(true);\r",
													"});\r",
													"pm.test(\"device_id is null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceKycRequestInformationFindAll[0].device_id == null).equals(true);\r",
													"});\r",
													"pm.test(\"expired_at is null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceKycRequestInformationFindAll[0].expired_at == null).equals(true);\r",
													"});\r",
													"pm.test(\"gkyc_user is an object\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(typeof jsonData.data.connectConsoleFinancialServiceKycRequestInformationFindAll[0].gkyc_user).to.equal(\"object\");\r",
													"});\r",
													"pm.test(\"gkyc_user_id is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceKycRequestInformationFindAll[0].gkyc_user_id !=null).equals(true);\r",
													"});\r",
													"pm.test(\"id is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceKycRequestInformationFindAll[0].id !=null).equals(true);\r",
													"});\r",
													"pm.test(\"image_url is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceKycRequestInformationFindAll[0].image_url !=null).equals(true);\r",
													"});\r",
													"pm.test(\"is_active is null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceKycRequestInformationFindAll[0].is_active == null).equals(true);\r",
													"});\r",
													"pm.test(\"kyc_accounts is an Array\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(Array.isArray(jsonData.data.connectConsoleFinancialServiceKycRequestInformationFindAll[0].kyc_accounts)).to.be.true;\r",
													"});\r",
													"pm.test(\"kyc_documents is an Array\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(Array.isArray(jsonData.data.connectConsoleFinancialServiceKycRequestInformationFindAll[0].kyc_documents)).to.be.true;\r",
													"});\r",
													"pm.test(\"kyc_nominees is an Array\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(Array.isArray(jsonData.data.connectConsoleFinancialServiceKycRequestInformationFindAll[0].kyc_nominees)).to.be.true;\r",
													"});\r",
													"pm.test(\"kyc_request_no is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceKycRequestInformationFindAll[0].kyc_request_no !=null).equals(true);\r",
													"});\r",
													"pm.test(\"lat is null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceKycRequestInformationFindAll[0].lat == null).equals(true);\r",
													"});\r",
													"pm.test(\"long is null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceKycRequestInformationFindAll[0].long == null).equals(true);\r",
													"});\r",
													"pm.test(\"sort_order is null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceKycRequestInformationFindAll[0].sort_order == null).equals(true);\r",
													"});\r",
													"pm.test(\"status is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceKycRequestInformationFindAll[0].status !=null).equals(true);\r",
													"});\r",
													"pm.test(\"updated_at is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceKycRequestInformationFindAll[0].updated_at !=null).equals(true);\r",
													"});\r",
													"pm.test(\"updated_by is null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceKycRequestInformationFindAll[0].updated_by == null).equals(true);\r",
													"});\r",
													"pm.test(\"updated_ip is null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceKycRequestInformationFindAll[0].updated_ip == null).equals(true);\r",
													"});\r",
													"pm.test(\"user_agent is null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceKycRequestInformationFindAll[0].user_agent == null).equals(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "x-device-id",
												"value": "{{x-device-id}}",
												"type": "text"
											},
											{
												"key": "x-app-id",
												"value": "{{x-app-id}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query ConnectConsoleFinancialServiceKycRequestInformationFindAll {\r\n  connectConsoleFinancialServiceKycRequestInformationFindAll {\r\n    app {\r\n      id\r\n    }\r\n    app_role_type_id\r\n    app_user_role_type_id\r\n    authorized_at\r\n    client_app {\r\n      id\r\n    }\r\n    client_app_id\r\n    created_at\r\n    created_by\r\n    created_ip\r\n    deleted_at\r\n    device_id\r\n    expired_at\r\n    gkyc_user {\r\n      id\r\n    }\r\n    gkyc_user_id\r\n    id\r\n    image_url\r\n    is_active\r\n    kyc_accounts {\r\n      id\r\n    }\r\n    kyc_documents {\r\n      id\r\n    }\r\n    kyc_nominees {\r\n      id\r\n    }\r\n    kyc_request_no\r\n    lat\r\n    long\r\n    sort_order\r\n    status\r\n    updated_at\r\n    updated_by\r\n    updated_ip\r\n    user_agent\r\n  }\r\n}",
												"variables": ""
											}
										},
										"url": {
											"raw": "{{baseUrl}}",
											"host": [
												"{{baseUrl}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "ConnectConsoleLoginWithPassword",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"var jsonData = pm.response.json();\r",
													"pm.environment.set(\"token\",\r",
													"jsonData.data.connectConsoleLoginWithPassword._token);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Array is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleLoginWithPassword !=null).equals(true);\r",
													"});\r",
													"pm.test(\"_token is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleLoginWithPassword._token !=null).equals(true);\r",
													"});\r",
													"pm.test(\"connect_id is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleLoginWithPassword.connect_id !=null).equals(true);\r",
													"});\r",
													"pm.test(\"device_is_restricted is null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleLoginWithPassword.device_is_restricted == null).equals(true);\r",
													"});\r",
													"pm.test(\"device_is_verified is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleLoginWithPassword.device_is_verified != null).equals(true);\r",
													"});\r",
													"pm.test(\"device_limit_exceeded is null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleLoginWithPassword.device_limit_exceeded == null).equals(true);\r",
													"});\r",
													"pm.test(\"device_restricted_duration is null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleLoginWithPassword.device_restricted_duration == null).equals(true);\r",
													"});\r",
													"pm.test(\"device_token_expired_at is null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleLoginWithPassword.device_token_expired_at == null).equals(true);\r",
													"});\r",
													"pm.test(\"device_verification_required is null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleLoginWithPassword.device_verification_required == null).equals(true);\r",
													"});\r",
													"pm.test(\"id is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleLoginWithPassword.id != null).equals(true);\r",
													"});\r",
													"pm.test(\"image_url is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleLoginWithPassword.image_url != null).equals(true);\r",
													"});\r",
													"pm.test(\"password_token_expired_at is null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleLoginWithPassword.password_token_expired_at == null).equals(true);\r",
													"});\r",
													"pm.test(\"password_verification_required is null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleLoginWithPassword.password_verification_required == null).equals(true);\r",
													"});\r",
													"pm.test(\"user_first_name is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleLoginWithPassword.user_first_name != null).equals(true);\r",
													"});\r",
													"pm.test(\"user_is_ban is null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleLoginWithPassword.user_is_ban == null).equals(true);\r",
													"});\r",
													"pm.test(\"user_is_restricted is null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleLoginWithPassword.user_is_restricted == null).equals(true);\r",
													"});\r",
													"pm.test(\"user_last_name is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleLoginWithPassword.user_last_name != null).equals(true);\r",
													"});\r",
													"pm.test(\"user_middle_name is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleLoginWithPassword.user_middle_name != null).equals(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "x-device-id",
												"value": "{{x-device-id}}",
												"type": "text"
											},
											{
												"key": "x-app-id",
												"value": "{{x-app-id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query ConnectConsoleLoginWithPassword($input: ConnectConsoleLoginWithPasswordInput!) {\r\n  connectConsoleLoginWithPassword(input: $input) {\r\n    _token\r\n    connect_id\r\n    device_is_restricted\r\n    device_is_verified\r\n    device_limit_exceeded\r\n    device_restricted_duration\r\n    device_token_expired_at\r\n    device_verification_required\r\n    id\r\n    image_url\r\n    password_token_expired_at\r\n    password_verification_required\r\n    user_first_name\r\n    user_is_ban\r\n    user_is_restricted\r\n    user_last_name\r\n    user_middle_name\r\n  }\r\n}",
												"variables": ""
											}
										},
										"url": {
											"raw": "{{baseUrl}}",
											"host": [
												"{{baseUrl}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "KycRequestInformationPagination",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Array is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceKycRequestInformationPagination !=null).equals(true);\r",
													"});\r",
													"pm.test(\"Token has been expired\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].message).to.eql(\"You are not authorized for access the method.\");\r",
													"});\r",
													"pm.test(\"result is an array\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(Array.isArray(jsonData.data.connectConsoleFinancialServiceKycRequestInformationPagination.result)).to.be.true;\r",
													"});\r",
													"pm.test(\"skip is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceKycRequestInformationPagination.skip !=null).equals(true);\r",
													"});\r",
													"pm.test(\"take is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceKycRequestInformationPagination.take !=null).equals(true);\r",
													"});\r",
													"pm.test(\"total is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceKycRequestInformationPagination.total !=null).equals(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "x-device-id",
												"value": "{{x-device-id}}",
												"type": "text"
											},
											{
												"key": "x-app-id",
												"value": "{{x-app-id}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query ConnectConsoleFinancialServiceKycRequestInformationPagination($input: PaginationInput!) {\r\n  connectConsoleFinancialServiceKycRequestInformationPagination(input: $input) {\r\n    result {\r\n      id\r\n    }\r\n    skip\r\n    take\r\n    total\r\n  }\r\n}",
												"variables": "{\r\n  \"input\": {\r\n    \"skip\": 0,\r\n    \"take\": 5\r\n  }\r\n}"
											}
										},
										"url": {
											"raw": "{{baseUrl}}",
											"host": [
												"{{baseUrl}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "KycRequestInformationClientKycRequestsByUserAndApp",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Array is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceKycRequestInformationClientKycRequestsByUserAndApp !=null).equals(true);\r",
													"});\r",
													"pm.test(\"Token has been expired\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].message).to.eql(\"You are not authorized for access the method.\");\r",
													"});\r",
													"pm.test(\"result is an array\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(Array.isArray(jsonData.data.connectConsoleFinancialServiceKycRequestInformationClientKycRequestsByUserAndApp.result)).to.be.true;\r",
													"});\r",
													"pm.test(\"skip is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceKycRequestInformationClientKycRequestsByUserAndApp.skip !=null).equals(true);\r",
													"});\r",
													"pm.test(\"take is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceKycRequestInformationClientKycRequestsByUserAndApp.take !=null).equals(true);\r",
													"});\r",
													"pm.test(\"total is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceKycRequestInformationClientKycRequestsByUserAndApp.total !=null).equals(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "x-device-id",
												"value": "{{x-device-id}}",
												"type": "text"
											},
											{
												"key": "x-app-id",
												"value": "{{x-app-id}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query ConnectConsoleFinancialServiceKycRequestInformationClientKycRequestsByUserAndApp($appId: String!, $input: PaginationInput!) {\r\n  connectConsoleFinancialServiceKycRequestInformationClientKycRequestsByUserAndApp(app_id: $appId, input: $input) {\r\n    result {\r\n      id\r\n    }\r\n    skip\r\n    take\r\n    total\r\n  }\r\n}",
												"variables": "{\r\n  \"input\": {\r\n    \"skip\": 0,\r\n    \"take\": 10\r\n  },\r\n  \"appId\": \"ef7551e0-936a-4727-8efd-6c77a156df9e\"\r\n}"
											}
										},
										"url": {
											"raw": "{{baseUrl}}",
											"host": [
												"{{baseUrl}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "StatementRequestInformationClientStatementRequestsByUserAndApp",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Array is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceStatementRequestInformationClientStatementRequestsByUserAndApp.result !=null).equals(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "x-device-id",
												"value": "{{x-device-id}}",
												"type": "text"
											},
											{
												"key": "x-app-id",
												"value": "{{x-app-id}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query ConnectConsoleFinancialServiceStatementRequestInformationClientStatementRequestsByUserAndApp($input: PaginationInput!, $appId: String!) {\r\n  connectConsoleFinancialServiceStatementRequestInformationClientStatementRequestsByUserAndApp(input: $input, app_id: $appId) {\r\n    result {\r\n      statement_accounts {\r\n        account_holder_name\r\n      }\r\n      statement_request_no\r\n    }\r\n  }\r\n}",
												"variables": "{\r\n  \"input\": {\r\n    \"skip\": 0,\r\n    \"take\": 10\r\n  },\r\n  \"appId\": \"ef7551e0-936a-4727-8efd-6c77a156df9e\"\r\n}"
											}
										},
										"url": {
											"raw": "{{baseUrl}}",
											"host": [
												"{{baseUrl}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "UserInformationFindAll",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Array is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleUserServiceUserInformationFindAll !=null).equals(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "x-device-id",
												"value": "{{x-device-id}}",
												"type": "text"
											},
											{
												"key": "x-app-id",
												"value": "{{x-app-id}}",
												"type": "text"
											},
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query ConnectConsoleUserServiceUserInformationFindAll {\r\n  connectConsoleUserServiceUserInformationFindAll {\r\n    connect_id\r\n    first_name\r\n    last_name\r\n  }\r\n}",
												"variables": ""
											}
										},
										"url": {
											"raw": "{{baseUrl}}",
											"host": [
												"{{baseUrl}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "CountryInformationFindAll",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"// pm.test(\"Array is not null\", function () {\r",
													"//     var jsonData = pm.response.json();\r",
													"//     pm.expect(jsonData.data.coreLocalisationServiceCountryInformationFindAll).not.null;\r",
													"// });\r",
													"pm.test(\"Array is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.coreLocalisationServiceCountryInformationFindAll !=null).equals(true);\r",
													"});\r",
													"pm.test(\"app_role_type_id is null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.coreLocalisationServiceCountryInformationFindAll[0].app_role_type_id ==null).equals(true);\r",
													"});\r",
													"pm.test(\"app_user_role_type_id is null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.coreLocalisationServiceCountryInformationFindAll[0].app_user_role_type_id ==null).equals(true);\r",
													"});\r",
													"pm.test(\"calling_code is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.coreLocalisationServiceCountryInformationFindAll[0].calling_code !=null).equals(true);\r",
													"});\r",
													"pm.test(\"continent is an object\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(typeof jsonData.data.coreLocalisationServiceCountryInformationFindAll[0].continent).to.equal(\"object\");\r",
													"});\r",
													"pm.test(\"continent_id is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.coreLocalisationServiceCountryInformationFindAll[0].continent_id !=null).equals(true);\r",
													"});\r",
													"pm.test(\"created_at is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.coreLocalisationServiceCountryInformationFindAll[0].created_at != null).equals(true);\r",
													"});\r",
													"pm.test(\"created_by is null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.coreLocalisationServiceCountryInformationFindAll[0].created_by == null).equals(true);\r",
													"});\r",
													"pm.test(\"created_ip is null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.coreLocalisationServiceCountryInformationFindAll[0].created_ip ==null).equals(true);\r",
													"});\r",
													"pm.test(\"deleted_at is null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.coreLocalisationServiceCountryInformationFindAll[0].deleted_at ==null).equals(true);\r",
													"});\r",
													"pm.test(\"device_id is null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.coreLocalisationServiceCountryInformationFindAll[0].device_id == null).equals(true);\r",
													"});\r",
													"pm.test(\"districts is an Array\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(Array.isArray(jsonData.data.coreLocalisationServiceCountryInformationFindAll[0].districts)).to.be.true;\r",
													"});\r",
													"pm.test(\"icon_name is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.coreLocalisationServiceCountryInformationFindAll[0].icon_name != null).equals(true);\r",
													"});\r",
													"pm.test(\"id is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.coreLocalisationServiceCountryInformationFindAll[0].id != null).equals(true);\r",
													"});\r",
													"pm.test(\"image_url is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.coreLocalisationServiceCountryInformationFindAll[0].image_url != null).equals(true);\r",
													"});\r",
													"pm.test(\"is_active is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.coreLocalisationServiceCountryInformationFindAll[0].is_active != null).equals(true);\r",
													"});\r",
													"pm.test(\"iso_code_one is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.coreLocalisationServiceCountryInformationFindAll[0].iso_code_one != null).equals(true);\r",
													"});\r",
													"pm.test(\"iso_code_two is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.coreLocalisationServiceCountryInformationFindAll[0].iso_code_two != null).equals(true);\r",
													"});\r",
													"pm.test(\"lat is null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.coreLocalisationServiceCountryInformationFindAll[0].lat == null).equals(true);\r",
													"});  \r",
													"pm.test(\"long is null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.coreLocalisationServiceCountryInformationFindAll[0].long == null).equals(true);\r",
													"});\r",
													"pm.test(\"long_description is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.coreLocalisationServiceCountryInformationFindAll[0].long_description != null).equals(true);\r",
													"});\r",
													"pm.test(\"long_description_bn is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.coreLocalisationServiceCountryInformationFindAll[0].long_description != null).equals(true);\r",
													"});\r",
													"pm.test(\"name is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.coreLocalisationServiceCountryInformationFindAll[0].name != null).equals(true);\r",
													"});  \r",
													"pm.test(\"name_bn is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.coreLocalisationServiceCountryInformationFindAll[0].name_bn != null).equals(true);\r",
													"});   \r",
													"pm.test(\"numeric_code is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.coreLocalisationServiceCountryInformationFindAll[0].numeric_code != null).equals(true);\r",
													"});   \r",
													"pm.test(\"post_offices is an Array\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(Array.isArray(jsonData.data.coreLocalisationServiceCountryInformationFindAll[0].post_offices)).to.be.true;\r",
													"});  \r",
													"pm.test(\"region is an object\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(typeof jsonData.data.coreLocalisationServiceCountryInformationFindAll[0].region).to.equal(\"object\");\r",
													"});  \r",
													"pm.test(\"region_id is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.coreLocalisationServiceCountryInformationFindAll[0].region_id != null).equals(true);\r",
													"});  \r",
													"pm.test(\"short_description is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.coreLocalisationServiceCountryInformationFindAll[0].short_description != null).equals(true);\r",
													"});  \r",
													"pm.test(\"short_description_bn is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.coreLocalisationServiceCountryInformationFindAll[0].short_description_bn != null).equals(true);\r",
													"});  \r",
													"pm.test(\"sort_order is null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.coreLocalisationServiceCountryInformationFindAll[0].sort_order == null).equals(true);\r",
													"});  \r",
													"pm.test(\"states is an Array\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(Array.isArray(jsonData.data.coreLocalisationServiceCountryInformationFindAll[0].states)).to.be.true;\r",
													"});  \r",
													"pm.test(\"upazilas is an Array\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(Array.isArray(jsonData.data.coreLocalisationServiceCountryInformationFindAll[0].upazilas)).to.be.true;\r",
													"});  \r",
													"pm.test(\"updated_at is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.coreLocalisationServiceCountryInformationFindAll[0].updated_at != null).equals(true);\r",
													"});  \r",
													"pm.test(\"updated_by is null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.coreLocalisationServiceCountryInformationFindAll[0].updated_by == null).equals(true);\r",
													"});\r",
													"pm.test(\"updated_ip is null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.coreLocalisationServiceCountryInformationFindAll[0].updated_ip == null).equals(true);\r",
													"});  \r",
													"pm.test(\"user_agent is null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.coreLocalisationServiceCountryInformationFindAll[0].user_agent == null).equals(true);\r",
													"});  \r",
													"  \r",
													"  \r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "{{x-device-id}}",
												"value": "",
												"type": "text"
											},
											{
												"key": "{{x-app-id}}",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query CoreLocalisationServiceCountryInformationFindAll {\r\n  coreLocalisationServiceCountryInformationFindAll {\r\n  app_role_type_id\r\n  app_user_role_type_id\r\n  calling_code\r\n  continent{\r\n      id\r\n  }\r\n  continent_id\r\n  created_at\r\n  created_by\r\n  created_ip\r\n  deleted_at\r\n  device_id\r\n  districts{\r\n      id\r\n  }\r\n  icon_name\r\n  id\r\n  image_url\r\n  is_active\r\n  iso_code_one\r\n  iso_code_two\r\n  lat\r\n  long\r\n  long_description\r\n  long_description_bn\r\n  name\r\n  name_bn\r\n  numeric_code\r\n  post_offices{\r\n      id\r\n  }\r\n  region{\r\n      id\r\n  }\r\n  region_id\r\n  short_description\r\n  short_description_bn\r\n  sort_order\r\n  states{\r\n      id\r\n  }\r\n  upazilas{\r\n      id\r\n  }\r\n  updated_at\r\n  updated_by\r\n  updated_ip\r\n  user_agent\r\n  }\r\n}",
												"variables": ""
											}
										},
										"url": {
											"raw": "{{baseUrl}}",
											"host": [
												"{{baseUrl}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "mutations",
							"item": [
								{
									"name": "KycRequestInformationInsertOne",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Array is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleUserServiceUserInformationFindAll !=null).equals(true);\r",
													"});\r",
													"pm.test(\"Token has been expired\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].message).to.eql(\"You are not authorized for access the method.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "x-device-id",
												"value": "{{x-device-id}}",
												"type": "text"
											},
											{
												"key": "x-app-id",
												"value": "{{x-app-id}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation ConnectConsoleFinancialServiceKycRequestInformationInsertOne($input: CreateConnectConsoleFinancialServiceKycRequestInformationInput!) {\r\n  connectConsoleFinancialServiceKycRequestInformationInsertOne(input: $input) {\r\n    is_active\r\n    gkyc_user {\r\n      first_name\r\n      middle_name\r\n      last_name\r\n    }\r\n    client_app {\r\n      name\r\n    }\r\n  }\r\n}",
												"variables": "{\r\n  \"input\": {\r\n    \"client_app_id\": \"ef7551e0-936a-4727-8efd-6c77a156df9e\",\r\n    \"gkyc_user_id\": \"a338d7dc-7c70-438f-864f-cd283ffd3fdf\"\r\n    \r\n  }\r\n}"
											}
										},
										"url": {
											"raw": "{{baseUrl}}",
											"host": [
												"{{baseUrl}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "KycRequestInformationClientKycRequest",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Array is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceKycRequestInformationClientKycRequest !=null).equals(true);\r",
													"});\r",
													"pm.test(\"Token has been expired\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].message).to.eql(\"You are not authorized for access the method.\");\r",
													"});\r",
													"pm.test(\"Check if exactly 10 characters long, consists of alphanumeric capital letters, and does not contain any special characters\", function () {\r",
													"    const pattern = /^[A-Z0-9]{10}$/;\r",
													"    var jsonData = pm.response.json();\r",
													"     var kyc_request_no = jsonData.data.connectConsoleFinancialServiceKycRequestInformationClientKycRequest.kyc_request_no;\r",
													"    const isValid = pattern.test(kyc_request_no);\r",
													"    pm.expect(isValid).to.be.true;\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "x-device-id",
												"value": "{{x-device-id}}",
												"type": "text"
											},
											{
												"key": "x-app-id",
												"value": "{{x-app-id}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation ConnectConsoleFinancialServiceKycRequestInformationClientKycRequest($input: KycRequestConnectConsoleFinancialServiceKycRequestInformationInput!) {\r\n  connectConsoleFinancialServiceKycRequestInformationClientKycRequest(input: $input) {\r\n    id\r\n    kyc_request_no\r\n  }\r\n}\r\n",
												"variables": "{\r\n  \"input\": {\r\n    \"account_holder_calling_code\": \"+88\",\r\n    \"account_holder_date_of_birth\": \"11-30-1999\",\r\n    \"account_holder_document_no\": \"2154745042121480\",\r\n    \"account_holder_name\": \"Mehedi Hasan\",\r\n    \"account_number\": \"1101001897450\",\r\n    \"account_holder_phone_number\": \"01303865986\",\r\n    \"gkyc_document_type_id\": \"6b494ee9-5e02-48b6-a28b-00b5ae99e416\",\r\n    \"psp_account_type_id\": \"de0b99cb-566c-4ba8-a2c0-5e9df1356b27\",\r\n    \"psp_branch_or_agent_id\": \"cea07b09-8fe2-4ef7-9c6e-53084e3db14a\",\r\n    \"psp_id\": \"4171b743-6f3e-438d-a662-ce412efdbe12\"\r\n  }\r\n}"
											}
										},
										"url": {
											"raw": "{{baseUrl}}",
											"host": [
												"{{baseUrl}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "KycRequestInformationClientKycBulkRequest",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Array is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceKycRequestInformationClientKycBulkRequest !=null).equals(true);\r",
													"});\r",
													"pm.test(\"File has been successfully uploaded.\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceKycRequestInformationClientKycBulkRequest).equals(\"File has been successfully uploaded.\")\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "x-device-id",
												"value": "{{x-device-id}}",
												"type": "text"
											},
											{
												"key": "x-app-id",
												"value": "{{x-app-id}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation ConnectConsoleFinancialServiceKycRequestInformationClientKycBulkRequest($appId: String!, $file: String!) {\r\n  connectConsoleFinancialServiceKycRequestInformationClientKycBulkRequest(app_id: $appId, file: $file)\r\n}",
												"variables": "{  \"appId\": \"ef7551e0-936a-4727-8efd-6c77a156df9e\",\r\n\"file\": \"\"\r\n}"
											}
										},
										"url": {
											"raw": "{{baseUrl}}",
											"host": [
												"{{baseUrl}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "StatementRequestInformationClientStatementRequest",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Array is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceStatementRequestInformationClientStatementRequest !=null).equals(true);\r",
													"});\r",
													"pm.test(\"Token has been expired\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.errors[0].message).to.eql(\"You are not authorized for access the method.\");\r",
													"});\r",
													"pm.test(\"Check if exactly 10 characters long, consists of alphanumeric capital letters, and does not contain any special characters\", function () {\r",
													"    const pattern = /^[A-Z0-9]{10}$/;\r",
													"    var jsonData = pm.response.json();\r",
													"     var statement_request_no = jsonData.data.connectConsoleFinancialServiceStatementRequestInformationClientStatementRequest.statement_request_no;\r",
													"    const isValid = pattern.test(statement_request_no);\r",
													"    pm.expect(isValid).to.be.true;\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "x-device-id",
												"value": "{{x-device-id}}",
												"type": "text"
											},
											{
												"key": "x-app-id",
												"value": "{{x-app-id}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation ConnectConsoleFinancialServiceStatementRequestInformationClientStatementRequest($input: StatementRequestConnectConsoleFinancialServiceStatementRequestInformationInput!) {\r\n  connectConsoleFinancialServiceStatementRequestInformationClientStatementRequest(input: $input) {\r\n    client_app_id\r\n    statement_request_no\r\n  }\r\n}",
												"variables": "{\r\n  \"input\": {\r\n    \"account_holder_calling_code\": \"+88\",\r\n    \"account_holder_date_of_birth\": \"11-30-1999\",\r\n    \"account_holder_document_no\": \"2154745042121480\",\r\n    \"account_holder_name\": \"Mehedi Hasan\",\r\n    \"account_number\": \"1101001897450\",\r\n    \"account_holder_phone_number\": \"01303865986\",\r\n    \"gkyc_document_type_id\": \"6b494ee9-5e02-48b6-a28b-00b5ae99e416\",\r\n    \"client_app_id\": \"ef7551e0-936a-4727-8efd-6c77a156df9e\",\r\n    \"psp_account_type_id\": \"de0b99cb-566c-4ba8-a2c0-5e9df1356b27\",\r\n    \"psp_branch_or_agent_id\": \"cea07b09-8fe2-4ef7-9c6e-53084e3db14a\",\r\n    \"psp_id\": \"4171b743-6f3e-438d-a662-ce412efdbe12\",\r\n    \"from_date\":\"01-12-2023\",\r\n    \"to_date\": \"07-12-2023\"\r\n  }\r\n}"
											}
										},
										"url": {
											"raw": "{{baseUrl}}",
											"host": [
												"{{baseUrl}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "StatementRequestInformationClientStatementBulkRequest",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Array is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceStatementRequestInformationClientStatementBulkRequest !=null).equals(true);\r",
													"});\r",
													"pm.test(\"File has been successfully uploaded.\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceStatementRequestInformationClientStatementBulkRequest).equals(\"File has been successfully uploaded.\")\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "x-device-id",
												"value": "{{x-device-id}}",
												"type": "text"
											},
											{
												"key": "x-app-id",
												"value": "{{x-app-id}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation ConnectConsoleFinancialServiceStatementRequestInformationClientStatementBulkRequest($appId: String!, $file: String!) {\r\n  connectConsoleFinancialServiceStatementRequestInformationClientStatementBulkRequest(app_id: $appId, file: $file)\r\n}",
												"variables": "{  \"appId\": \"ef7551e0-936a-4727-8efd-6c77a156df9e\",\r\n  \"file\": \"\"\r\n}"
											}
										},
										"url": {
											"raw": "{{baseUrl}}",
											"host": [
												"{{baseUrl}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "connect_console_kyc_account_holder_information",
					"item": [
						{
							"name": "mutations",
							"item": []
						},
						{
							"name": "queries",
							"item": [
								{
									"name": "KycAccountHolderInformationPagination",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Array is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceKycAccountHolderInformationPagination.result !=null).equals(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "x-device-id",
												"value": "{{x-device-id}}",
												"type": "text"
											},
											{
												"key": "x-app-id",
												"value": "{{x-app-id}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query ConnectConsoleFinancialServiceKycAccountHolderInformationPagination($input: PaginationInput!) {\r\n  connectConsoleFinancialServiceKycAccountHolderInformationPagination(input: $input) {\r\n    result {\r\n      client_app {\r\n        name\r\n      }\r\n      gkyc_user {\r\n        first_name\r\n        middle_name\r\n        last_name\r\n      }\r\n      sort_order\r\n      is_active\r\n    }\r\n  }\r\n}",
												"variables": "{\r\n  \"input\": {\r\n    \"skip\": 0,\r\n    \"take\": 5\r\n  }\r\n}"
											}
										},
										"url": {
											"raw": "{{baseUrl}}",
											"host": [
												"{{baseUrl}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "connect_console_kyc_document_information",
					"item": [
						{
							"name": "queries",
							"item": [
								{
									"name": "KycDocumentInformationPagination",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Array is not null\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceKycDocumentInformationPagination.result !=null).equals(true);\r",
													"});\r",
													"pm.test(\"result is aray\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.data.connectConsoleFinancialServiceKycDocumentInformationPagination.result).expect(Array)\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "x-device-id",
												"value": "{{x-device-id}}",
												"type": "text"
											},
											{
												"key": "x-app-id",
												"value": "{{x-app-id}}",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query ConnectConsoleFinancialServiceKycDocumentInformationPagination($input: PaginationInput!) {\r\n  connectConsoleFinancialServiceKycDocumentInformationPagination(input: $input) {\r\n    result {\r\n      client_app {\r\n        name\r\n      }\r\n      document_type {\r\n        name\r\n      }\r\n      sort_order\r\n      is_active\r\n    }\r\n  }\r\n}",
												"variables": "{\r\n  \"input\": {\r\n    \"skip\": 0,\r\n    \"take\": 5\r\n  }\r\n}"
											}
										},
										"url": {
											"raw": "{{baseUrl}}",
											"host": [
												"{{baseUrl}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "mutations",
							"item": []
						}
					]
				}
			]
		}
	]
}